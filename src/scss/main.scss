
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$Bookmarks-primary: mat-palette($mat-indigo);
$Bookmarks-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$Bookmarks-warn: mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$Bookmarks-theme: mat-light-theme((
  color: (
    primary: $Bookmarks-primary,
    accent: $Bookmarks-accent,
    warn: $Bookmarks-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($Bookmarks-theme);


@import "variables";
@import "mixins";

:root {
	font-size: 16px;
}

* {
	box-sizing: border-box;
	padding: 0;
	margin: 0;
	position: relative;
}

a,
button,
select,
textarea {
	cursor: pointer;
	outline: transparent;
	border: none;
}
a{
	text-decoration: none;
	color: inherit;
	font-size: inherit;
	line-height: inherit;
}
img {
	max-width: 100%;
	height: auto;
}

textarea {
	resize: none;
}

body {
	height: 100vh;
	display: flex;
	color: $mainFontWhite;
	font-size: 1rem;
	font-weight: normal;
	line-height: 1.3;
  background-color: $mainBlack;
	font-family: 'Inter', sans-serif;
	overflow-x: hidden;
}
.material-icons-round {
	font-size: inherit;
	line-height: inherit;
}
//
.gallery-wrp {
	display: grid;
	grid-template-rows: $title-pagination-row-height $galleryHeight $title-pagination-row-height;
	gap: $space;
}

.gallery-grid-wrp {
	max-height: $galleryHeight;
	overflow-y: auto;
	overflow-x: hidden;
	@include scrollStyle(#e0e0e0, $mainBlack);
	padding-right: 0.5rem;
}

.gallery {
	display: grid;
	grid-template-columns: repeat(4, 1fr);
	gap: 1.5rem;

	&__titles {
		display: grid;
		justify-content: space-between;
		align-items: center;
		gap: 2rem;
		grid-template-columns: repeat(auto-fit, minmax(5rem, max-content) );
	}
}

.gallery-item {
	padding: 1rem;
	background-color: #1b1f217f;
	transition-duration: 0.4s;
	border-radius: 4%;
	display: flex;
	flex-direction: column;
	justify-content: space-between;

	&:hover {
		background-color: $secondaryBlack;
	}


	&__img {
		position: absolute;
		left: 0;
		top: 0;
		width: 100%;
		height: 100%;
		object-fit: cover;
		object-position: center top;
		border-radius: 4%;


		&-wrp {
			padding-top: 66.66%;
			margin-bottom: 1rem;
			cursor: pointer;
		}
	}

	&__title {
		display: -webkit-box;
		-webkit-line-clamp: 2;
		-webkit-box-orient: vertical;
		overflow: hidden;
		font-size: clamp(12px, 1vw, 1.25rem);

		&-wrp {
			display: grid;
			grid-template-columns: 1fr $icon-size;
			gap: 0.5rem;
			align-items: flex-end;
		}
	}
}

.like-item-btn {
	cursor: pointer;
	&__checkbox {
		display: none;

		&:checked + .toggle-icon {
			color: $icon-fill-color;

			&:before {
				content: $icon-fill;
			}

			&:after {
				content: $icon-fill;
				animation: likeFly 0.6s ease-in;
			}
		}
	}
}

.toggle-icon {
	width: $icon-size;
	height: $icon-size;
	font-size: $icon-size;
	position: relative;
	color: gray;
	cursor: pointer;
	border: none;
	background-color: transparent;

	&:before,
	&:after {
		position: absolute;
		top: 0;
		left: 0;
		transition: all 0.3s ease-out;
		content: $icon-empty;
		font-family: "Material Icons Round";
	}

	&:hover:before {
		transform: scale(1.2);
	}

	&:active:before {
		transition: none;
		transform: scale(1);
	}

	&:after {
		opacity: 0;
	}
}

@keyframes heartbeat {
	from {
		opacity: 1;
	}
	to {
		transform: scale(3);
		opacity: 0;
	}
}

@keyframes likeFly {
	from {
		opacity: 1;
	}
	to {
		transform: scale(3) rotate(45deg) translateY(-90px);
		opacity: 0;
	}
}

.cdk-overlay-dark-backdrop, .lightboxOverlay {
	background: rgba(0, 0, 0, 0.5) !important;
	backdrop-filter: blur(2px) !important;
	opacity: 1 !important;
}

@media screen and (max-width: $breakpointIpadPro ) {
	:root{
		font-size: 14px;
	}
	.gallery{
		grid-template-columns: repeat(3, 1fr);
	}
}
@media screen and (max-width: $breakpointIpad ) {

	.gallery{
		grid-template-columns: repeat(2, 1fr);
	}
}
@media screen and (max-width: $breakpointRotatedPhone ) {
	:root{
		font-size: 12px;
	}
	.gallery{
		grid-template-columns: repeat(1, 1fr);
	}
}
